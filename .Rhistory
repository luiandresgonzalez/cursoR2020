into = c("FECHA", "HORA"),
sep = 9
)
str_sub("hola", 1,1)
str_sub("hola", 2)
contact107b <- contact107 %>%
separate(FECHA,
into = c("FECHA", "HORA"),
sep = 9
)
contact107b$HORA <- str_sub(contact107b$HORA, 2)
contact107b$HORA
contact107b <- contact107 %>%
str_sub(FECHA,
start = 1,
end = 9)
contact107
contact107b <- contact107 %>%
str_sub(FECHA,
start = 1,
end = 9)
contact107b <- contact107 %>%
transmute(FECHA, str_sub(1,9))
str(contact107b)
contact107b <- contact107 %>%
transmute(FECHA = str_sub(1,9))
str(contact107b)
contact107b <- contact107 %>%
mutate(FECHA = str_sub(1,9))
str(contact107b)
contact107b <- contact107 %>%
mutate(FECHA = str_sub(FECHA,1,9))
str(contact107b)
dmy(contact107$FECHA[1])
contact107b$FECHA[1]
dmy(contact107b$FECHA[1])
contact107b <- contact107 %>%
mutate(FECHA = str_sub(FECHA,1,9)) %>%
mutate(FECHA = dmy(FECHA))
str(contact107b)
contact107b <- contact107 %>%
mutate(FECHA = str_sub(string = FECHA,
from = 1,
to = 9)) %>%  # cambia FECHA para un subset de los caracteres del 1 al 9
mutate(FECHA = dmy(FECHA))           # transforma el resultado de lo anterior a formato fecha con lubridate
contact107b <- contact107 %>%
mutate(FECHA = str_sub(FECHA,
from = 1,
to = 9)) %>%  # cambia FECHA para un subset de los caracteres del 1 al 9
mutate(FECHA = dmy(FECHA))           # transforma el resultado de lo anterior a formato fecha con lubridate
contact107b <- contact107 %>%
mutate(FECHA = str_sub(FECHA,
start = 1,
end = 9)) %>%  # cambia FECHA para un subset de los caracteres del 1 al 9
mutate(FECHA = dmy(FECHA))           # transforma el resultado de lo anterior a formato fecha con lubridate
str(contact107b)
barplot(contact107b)
barplot(data = contact107b, COVID_LLAMADOS ~ FECHA)
source('~/R working directory/arenero/analisis llamados al 107 gob bs as.R')
boxplot(contactos_boti_triage_covid_19$triage_cantidad ~ contactos_boti_triage_covid_19$fecha)
str(contactos_boti_triage_covid_19)
contactos_boti_triage_covid_19 %>%
mutate(fecha = dmy(fecha))
str(contactos_boti_triage_covid_19)
contactos_boti_triage_covid_19 <- contactos_boti_triage_covid_19 %>%
mutate(fecha = dmy(fecha))
str(contactos_boti_triage_covid_19)
boxplot(contactos_boti_triage_covid_19$triage_cantidad ~ contactos_boti_triage_covid_19$fecha)
## Parte B - Mapa epidemiologico BSAS
contact107 <- read_csv("https://cdn.buenosaires.gob.ar/datosabiertos/datasets/salud/ufus/ufus.csv")
source('~/R working directory/arenero/analisis llamados al 107 gob bs as.R')
str(ufus)
install.packages("sf")
library(sf)
mapacaba <- st_read("https://bitsandbricks.github.io/data/CABA_rc.geojson")
summary(mapacaba)
ggplot() + geom_sf(data = mapacaba)
# probando cosas
ggplot() +
geom_sf(data = mapacaba, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c() +
labs(title = "Densidad de población",
subtitle = "Ciudad Autónoma de Buenos Aires",
fill = "hab/km2")
str(ufus)
View(seen)
View(ufus)
names(ufus)
mapaufus <- st_read("http://cdn.buenosaires.gob.ar/datosabiertos/datasets/salud/ufus/ubicacion-ufus.geojson")
ggplot() + geom_sf(data = mapaufus)
ggplot() + geom_sf(data = mapaufus) +
+ geom_sf(data = mapacaba)
ggplot() + geom_sf(data = mapaufus)
str(mapaufus)
View(mapaufus)
ggplot() + geom_sf(data = mapaufus) +
geom_point(data = mapaufus, aes(geometry), size = 4,
shape = 23, fill = "darkred")
mapaufus$geometry
str(mapaufus)
str(mapaufus$geometry)
str(mapaufus$geometry[1,])
mapaufus$geometry[1,]
mapaufus$geometry[[1]}
mapaufus$geometry[[1]]
st_crs(mapaufus)
st_crs(mapacaba)
ggplot() + geom_sf(mapacaba) +
geom_sf(data = mapaufus)
ggplot() + geom_sf(mapacaba) +
geom_sf(data = mapaufus)
ggplot() + geom_sf(mapacaba) +
geom_sf(data = mapaufus, aes(col = geometry))
ggplot() + geom_sf(mapacaba) +
geom_sf(mapaufus)
ggplot() + geom_sf(mapacaba)
ggplot() + geom_sf(data = mapacaba)
ggplot() + geom_sf(data = mapacaba) +
geom_sf(data = mapaufus)
ggplot() + geom_sf(data = mapacaba) +
geom_sf(data = mapaufus) + geom_point()
ggplot() + geom_sf(data = mapacaba) +
geom_sf(data = mapaufus) + geom_point(aes(color=cadmium))
ggplot() + geom_sf(data = mapacaba) +
geom_sf(data = mapaufus, aes(color=red))
ggplot() + geom_sf(data = mapacaba) +
geom_sf(data = mapaufus, aes(color="red"))
ggplot() + geom_sf(data = mapacaba) +
geom_sf(data = mapaufus, aes(color="red", size = 20))
View(mapaufus)
View(ufus)
View(mapaufus)
source('~/R working directory/arenero/analisis llamados al 107 gob bs as.R', encoding = 'UTF-8')
install.packages("sf")
ggplot(data = trees) +
geom_point(mapping = aes(x = Girth, y = Volume))
library(tidyverse)
ggplot(data = trees) +
geom_point(mapping = aes(x = Girth, y = Volume))
ggplot(data = trees) +
geom_point(mapping = aes(x = Girth, y = Volume)) +
geom_smooth(method = "lm")
ggplot(data = trees, aes(x = Girth, y = Volume)) +
geom_point() +
geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
SCpre <- read_delim("Transformacion de datos.csv",
";", escape_double = FALSE, col_types = cols(Sex_and_status = col_factor(levels = c("Macho sin castrar",
"Macho castrado", "Hembra sin castrar",
"Hembra castrada")), Breed = col_factor(levels = c("Collie",
"Bichon frise", "Bulldog frances",
"Caniche Toy", "Mestizo", "Golden Retriever",
"Labrador Retriever", "Pitbull",
"Beagle", "Welsh", "Ovejero aleman",
"Maltes", "Boxer", "Schnauzer mini",
"Yorkshire", "Vizsla", "Braco aleman",
"Rhodesian")), Age_at_diagnosis = col_double(),
Time_firstsign_diag = col_factor(levels = c("menos de 1 mes",
"entre 1 y 3 meses", "entre 3 y 6 meses",
"mas de 6 meses", "1 ano", "Dos anos")),
Potential_trigger = col_factor(levels = c("Si",
"No")), Observed_behavioral_changes = col_factor(levels = c("Si",
"No", "Tal vez"))), na = "NA",
trim_ws = TRUE)
SCpre <- read_delim("Transformacion de datos.csv",
";", escape_double = FALSE, col_types = cols(Sex_and_status = col_factor(levels = c("Macho sin castrar",
"Macho castrado", "Hembra sin castrar",
"Hembra castrada")), Breed = col_factor(levels = c("Collie",
"Bichon frise", "Bulldog frances",
"Caniche Toy", "Mestizo", "Golden Retriever",
"Labrador Retriever", "Pitbull",
"Beagle", "Welsh", "Ovejero aleman",
"Maltes", "Boxer", "Schnauzer mini",
"Yorkshire", "Vizsla", "Braco aleman",
"Rhodesian")), Age_at_diagnosis = col_double(),
Time_firstsign_diag = col_factor(levels = c("menos de 1 mes",
"entre 1 y 3 meses", "entre 3 y 6 meses",
"mas de 6 meses", "1 ano", "Dos anos")),
Potential_trigger = col_factor(levels = c("Si",
"No")), Observed_behavioral_changes = col_factor(levels = c("Si",
"No", "Tal vez"))), na = "NA",
trim_ws = TRUE)
```{r}
library(readr)
SCpre <- read_delim("Transformacion de datos.csv",
";", escape_double = FALSE, col_types = cols(Sex_and_status = col_factor(levels = c("Macho sin castrar",
"Macho castrado", "Hembra sin castrar",
"Hembra castrada")), Breed = col_factor(levels = c("Collie",
"Bichon frise", "Bulldog frances",
"Caniche Toy", "Mestizo", "Golden Retriever",
"Labrador Retriever", "Pitbull",
"Beagle", "Welsh", "Ovejero aleman",
"Maltes", "Boxer", "Schnauzer mini",
"Yorkshire", "Vizsla", "Braco aleman",
"Rhodesian")), Age_at_diagnosis = col_double(),
Time_firstsign_diag = col_factor(levels = c("menos de 1 mes",
"entre 1 y 3 meses", "entre 3 y 6 meses",
"mas de 6 meses", "1 ano", "Dos anos")),
Potential_trigger = col_factor(levels = c("Si",
"No")), Observed_behavioral_changes = col_factor(levels = c("Si",
"No", "Tal vez"))), na = "NA",
trim_ws = TRUE)
View(SCpre)
```{r}
plot(SCpre$Sex_and_status)
levels(SCpre$Sex_and_status)
SCpre$Sex_and_status <- as.character(SCpre$Sex_and_status)
typeof(SCpre$Sex_and_status)
library(tidyverse)
SCpre %>%
mutate(sex = case_when(
starts_with(Sex_and_status, "Hembra") ~ "hembra",
starts_with(Sex_and_status, "macho") ~ "macho"
))
SCpre %>%
mutate(sex = case_when(
startsWith(Sex_and_status, "Hembra") ~ "hembra",
startsWith(Sex_and_status, "macho") ~ "macho"
))
SCpre %>%
mutate(sex = case_when(
startsWith(Sex_and_status, "Hembra") ~ "hembra",
startsWith(Sex_and_status, "macho") ~ "macho",
TRUE ~ NA_character_
))
SCpre %>%
mutate(sex = case_when(
startsWith(Sex_and_status, "Hembra") ~ "hembra",
startsWith(Sex_and_status, "Macho") ~ "macho",
TRUE ~ NA_character_
))
SCpre %>%
mutate(sex = case_when(
startsWith(Sex_and_status, "Hembra") ~ "hembra",
startsWith(Sex_and_status, "Macho") ~ "macho"
)) %>%
mutate(status = case_when(
endsWith(Sex_and_status, "castrada") ~ "spayed",
endsWith(Sex_and_status, "castrado") ~ "spayed",
TRUE ~ "non-spayed"
))
View(SCpre)
SCpre <- SCpre %>%
mutate(sex = case_when(
startsWith(Sex_and_status, "Hembra") ~ "hembra",
startsWith(Sex_and_status, "Macho") ~ "macho"
)) %>%
mutate(status = case_when(
endsWith(Sex_and_status, "castrada") ~ "neutered",
endsWith(Sex_and_status, "castrado") ~ "neutered",
TRUE ~ "non-neutered"
))
View(SCpre)
SCpre %>%
relocate(sex, .after = Name) %>%
relocate(status, .after = sex)
SCpre %>%
relocate(sex, .after = Name) %>%
relocate(status, .after = sex) %>%
select(-Sex_and_status)
SCpre %>%
relocate(sex, .after = Name) %>%
relocate(status, .after = sex) %>%
select(-Sex_and_status) %>%
as.factor(sex) %>%
as.factor(status)
SCpre <- SCpre %>%
relocate(sex, .after = Name) %>%
relocate(status, .after = sex) %>%
select(-Sex_and_status)
SCpre$status <- as.factor(SCpre$status)
SCpre$sex <- as.factor(SCpre$sex)
str(SCpre)
plot(SCpre$sex)
plot(SCpre$sex, SCpre$status)
ggplot(SCpre, aes(x = sex)) +
geom_bar()
ggplot(SCpre, aes(x = sex)) +
geom_bar()
ggplot(SCpre, aes(x = sex, y = status)) +
geom_bar()
ggplot(SCpre, aes(x = sex, fill = status)) +
geom_bar()
ggplot(SCpre, aes(x = sex, fill = status)) +
geom_bar(position = "dodge")
ggplot(SCpre, aes(x = sex, fill = status)) +
geom_bar(position = "fill")
ggplot(SCpre, aes(x = sex, fill = status)) +
geom_bar()
ggplot(SCpre, aes(x = sex)) +
geom_bar(position = "dodge")
ggplot(SCpre, aes(x = sex, fill = status)) +
geom_bar(position = "fill")
ggplot(SCpre, aes(x = sex, fill = status)) +
geom_bar(position = "dodge")
plot(SCpre$sex, SCpre$status)
summarise(SCpre)
summarize(SCpre)
summarize(SCpre)
summarize_all(SCpre)
summary(SCpre)
ggplot(SCpre, aes(sex, Excitability)) +
geom_boxplot()
ggplot(SCpre, aes(sex, Excitability)) +
geom_point()
ggplot(SCpre, aes(sex, Excitability)) +
geom_point(position = "jitter")
ggplot(SCpre, aes(sex, Excitability)) +
geom_point(position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability)) +
geom_point(position = position_jitter(w = 0.1)) +
geom_boxplot()
ggplot(SCpre, aes(sex, Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1))
geom_boxplot()
ggplot(SCpre, aes(sex, Excitability)) +
geom_point(position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability)) +
geom_point(position = position_jitter(w = 0.1)) +
geom_boxplot()
ggplot(SCpre, aes(sex, Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability)) +
geom_boxplot() +
geom_point(aes(fill = status) position = position_jitter(w = 0.1))  # el fill va acá!!!
ggplot(SCpre, aes(sex, Excitability)) +
geom_boxplot() +
geom_point(aes(fill = status), # el fill va acá!!!
position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability, fill = status)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), fill = status)
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( fill = status)  )
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( fill = status)  )
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( shape = status)  )
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( shape = status)  )
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( shape = status, size = 2)  )
ggplot(SCpre, aes(sex, Excitability )) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( shape = status, size = 1)  )
ggplot(SCpre, aes(sex, Excitability,  size = 1)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes( shape = status))
ggplot(SCpre, aes(sex, Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status))
ggplot(SCpre, aes(sex, Excitability, fill = status)) +
geom_boxplot(width = 1) +
geom_point(position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability, fill = status)) +
geom_boxplot(width = 0,5) +
geom_point(position = position_jitter(w = 0.1))
ggplot(SCpre, aes(sex, Excitability, fill = status)) +
geom_boxplot(width = 0.5) +
geom_point(position = position_jitter(w = 0.1))
install.packages("ggcorrplot")
library(ggcorrplot)
corr <- round(cor(SCpre),1)
traits <- SCpre %>%
select(Trainability:Energy)
View(traits)
corr <- round(cor(traits),1)
head(corr)
head(corr[, 1:6])
View(corr)
str(corr)
str(traits)
traits <- SCpre %>%
select(Trainability:Energy, -Cohab_dog_agression)
corr <- round(cor(traits),1)
View(corr)
corr <- round(cor(traits),1, use = "complete.obs")
corr <- round(cor(traits, use = "complete.obs"),1)
ggcorrplot(corr)
p.mat <- cor_pmat(traits)
ggcorrplot(corr, hc.order = TRUE,
type = "lower", p.mat = p.mat)
ggcorrplot(corr, hc.order = TRUE,
type = "lower", p.mat = p.mat, insig = "blank")
cite(ggcorrplot())
cite("ggcorrplot")
?ggcorrplot
citation("ggcorrplot")
SCpre %>%
mutate(dummy = 1) %>%
spread(
key = Breed,
value = dummy,
fill = 0
)
paraCorr <- SCpre %>%
mutate(dummy = 1) %>%
spread(
key = Breed,
value = dummy,
fill = 0
) %>%
select(Trainability:Rhodesian)
corr <- round(cor(paraCorr, use = "complete.obs"),1)
View(corr)
p.mat <- cor_pmat(paraCorr)
ggcorrplot(corr, hc.order = TRUE,
type = "lower", p.mat = p.mat, insig = "blank")
ggcorrplot(corr)
ggcorrplot(corr, hc.order = TRUE)
ggcorrplot(corr, type = "lower")
ggcorrplot(corr, type = "lower" , p.mat = p.mat, insig = "blank")
p.mat <- cor_pmat(paraCorr)
ggcorrplot(corr, type = "lower")
barplot(SCpre$Trainability ~ SCpre$Breed)
View(SCpre)
ggplot(data = SCpre, aes(x = Breed, y = Trainabilty)) + geom_boxplot()
View(SCpre)
porRaza <- SCpre %>%
group_by(Breed) %>%
summarize(mean=mean(Trainability),
sd=sd(Trainability),n=n())
View(porRaza)
plot(porRaza)
porRaza <- SCpre %>%
group_by(Breed)
plot(porRaza)
porRaza <- SCpre %>%
group_by(Breed) %>%
select(Trainability:Energy)
plot(porRaza)
porRaza <- SCpre %>%
group_by(Breed) %>%
select(Trainability:Energy)
plot(porRaza)
plot(porRaza$Trainability)
View(porRaza)
summarise(porRaza)
summarise(porRaza .groups = T)
summarise(porRaza .groups = Breed)
summarise(porRaza .groups = "keep")
SCpre ~ Breed
summarize(SCpre ~ Breed)
ggplot(SCpre, aes(x = Breed)) +
geom_boxplot()
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_boxplot()
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_point()
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_point(position = "jitter")
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_point(position = "jitter") + facet_grid(rows = vars(sex))
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_point(position = "jitter") + facet_grid(cols = vars(sex))
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_point(position = "jitter") + facet_grid(cols = vars(sex), rows = vars(status))
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_boxplot() + facet_grid(cols = vars(sex), rows = vars(status))
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_bar() + facet_grid(cols = vars(sex), rows = vars(status))
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_col() + facet_grid(cols = vars(sex), rows = vars(status))
ggplot(SCpre, aes(x = Breed, y = Trainability)) +
geom_col() + facet_grid(cols = vars(sex), rows = vars(status)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs(SCpre)
ggpairs(traits)
ggpairs(traits)
# install.packages("GGally")
library(GGally)
ggpairs(traits)
ggpairs(traits)
knitr::opts_chunk$set(echo = TRUE)
ggplot(SCpre, aes(x= sex, y = Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status)) + theme_bw()
library(tidyverse)
ggplot(SCpre, aes(x= sex, y = Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status)) + theme_bw()
geom_point(position = position_jitter(w = 0.1), aes(color = status)) + theme_bw()
ggplot(SCpre, aes(x= sex, y = Excitability)) +
geom_point(position = position_jitter(w = 0.1), aes(color = status)) + theme_bw()
ggplot(SCpre, aes(x= sex, y = Excitability)) + theme_bw() +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status))
ggplot(SCpre, aes(x= sex, y = Excitability)) + theme_bw() +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status))
ggplot(SCpre, aes(x= sex, y = Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status)) + theme_minimal()
ggplot(SCpre, aes(x= sex, y = Excitability)) +
geom_boxplot() +
geom_point(position = position_jitter(w = 0.1), aes(color = status)) + theme_dark()
ggplot(SCpre, aes(x= sex, y = Excitability)) +
geom_point(position = position_jitter(w = 0.1)) + theme_bw()
